openapi: '3.0.2'
info:
 title: "Contact Reconciliation API"
 version: "1.0.0"
 description: |-
   This is api documentation for contact Reconciliation project. I am using openapi 3.0.3 . 
   You can checkout the project at this [github link](https://github.com/Amritanshu1912/Contact-Reconciliation) 
 contact:
   email: amritanshu.singh.mat15@itbhu.ac.in
 license:
   name: MIT
   url: https://github.com/Amritanshu1912/Contact-Reconciliation/blob/main/LICENSE
 
servers:
 - url: http://localhost:3000/
paths:
 /auth/signup:
   post:
     tags:
       - auth
     summary: "User Registration"
     description: "Endpoint for user registration."
     requestBody:
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/UserRegistration'
     responses:
       "201":
         description: "User registered successfully."
       "400":
         description: "Username already taken."
       "500":
         description: "Internal server error."

 /auth/signin:
   post:
     tags:
       - auth       
     summary: "User Sign In"
     description: "Endpoint for user sign-in."
     requestBody:
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/UserSignIn'
     responses:
       "200":
         description: "User signed in successfully."
         content:
           application/json:
             schema:
               type: "object"
               properties:
                token:
                  type: "string"
                  description: "JWT token for authenticated user."         
       "401":
         description: "Invalid username or password."
       "500":
         description: "Internal server error."

 /auth/logout:
   get:
     tags:
       - auth       
     summary: "User Logout"
     description: "Endpoint for user logout."
     responses:
       "200":
         
         description: "Logged out."
       "500":
         description: "Internal server error."
              
 /contact/contacts:
   get:
     tags:
       - contact       
     summary: "Get All Contacts"
     description: "Endpoint to get all contacts."
     security:
       - bearerAuth: []
     responses:
       "200":
         description: "Contacts retrieved successfully."
         content:
           application/json:
             schema:
               type: "array"
               items:
                $ref: '#/components/schemas/Contact'         
       "500":
         description: "Internal server error."


 /contact/identify:
   post:
     tags:
       - contact       
     summary: "Identify Contact"
     description: "Endpoint to identify a contact."
     requestBody:
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/ContactIdentification'
     responses:
       "200":
         description: "Contact identified successfully."
       "422":
         description: "Empty parameter received."
       "500":
         description: "Internal server error."         

components:
  securitySchemes:
    bearerAuth:
     type: http
     scheme: bearer
     bearerFormat: JWT
  schemas:
   UserRegistration:
     type: "object"
     properties:
       username:
         type: "string"
         description: "Username for registration. Must be unique and between 6 and 20 characters long."
       password:
         type: "string"
         description: "Password for registration. Must be at least 8 characters long."

   UserSignIn:
     type: "object"
     properties:
       username:
         type: "string"
         description: "Username for sign-in."
       password:
         type: "string"
         description: "Password for sign-in."

   Contact:
     type: "object"
     properties:
       id:
         type: "integer"
         description: "Unique identifier for the contact."
       phone_number:
         type: "string"
         description: "Phone number of the contact."
       email:
         type: "string"
         description: "Email of the contact."
       linked_id:
         type: "integer"
         description: "ID of the linked contact."
       link_precedence:
         type: "string"
         description: "Precedence of the link (primary or secondary)."
       createdAt:
         type: "string"
         format: "date-time"
         description: "Date and time when the contact was created."
       updatedAt:
         type: "string"
         format: "date-time"
         description: "Date and time when the contact was last updated."
       deletedAt:
         type: "string"
         format: "date-time"
         description: "Date and time when the contact was deleted."

   ContactIdentification:
     type: "object"
     properties:
       email:
         type: "string"
         format: "email"
         description: "Email for contact identification."
       phoneNumber:
         type: "string"
         pattern: '^\+?\d{1,4}?[-.\s]?\(?\d{1,3}?\)?[-.\s]?\d{1,4}[-.\s]?\d{1,9}$'
         description: "Phone number for contact identification."